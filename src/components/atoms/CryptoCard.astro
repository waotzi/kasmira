---
export interface Props {
	title: string;
	key: string;
	href?: string;
	image?: string;
	id: number;
}

const { href, title, key, image, id } = Astro.props;
---

  <li class="link-card" tabindex={id}>
	<a onclick="copyToClipboard(event)">
		<h2>
		{title}
		<span>&rarr;</span>
		</h2>
		<center>
			<img src={image} />
		</center>
		<span class="copy-key">{key}</span>
	</a>
</li>

<script is:inline>
  function copyToClipboard(event) {
    event.stopPropagation(); // Prevent triggering other click events
	const keyElement = event.currentTarget.querySelector('.copy-key');
    const key = keyElement.innerHTML

	// Highlight the key text within the copy-key span
	const range = document.createRange();
    range.selectNodeContents(keyElement);
    const selection = window.getSelection();
    selection.removeAllRanges();
    selection.addRange(range);

    navigator.clipboard.writeText(key).then(
      function () {
        console.log("Copied key to clipboard:", key);
        // You can add any additional feedback or UI changes here, such as showing a tooltip
      },
      function (err) {
        console.error("Failed to copy key to clipboard:", err);
      }
    );
  }
</script>
<style>
	.link-card {
		width: 100%;

		cursor: pointer;
		list-style: none;
		display: flex;
		word-wrap: break-word;
		padding: 0.25rem;
	}

	.link-card > a {
		overflow: hidden;
		text-decoration: none;
		line-height: 1.4;
		border-radius: 0.35rem;
		padding: 1rem;
		color: #111;
		background-color: white;
	}
	h2 {
		margin: 0;
		font-size: 1.25rem;
		transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
	}
	p {
		margin-top: 0.5rem;
		margin-bottom: 0;
		color: #444;
	}


</style>

---
import BaseTemplate from "../components/templates/BaseTemplate.astro";
import getUsername from "../composables/session";
import CryptoCard from "../components/molecules/CryptoCard.astro";
// @ts-ignore
import QRCode from 'qrcode';
import { CryptoKeys, UserDocument } from '../models'
import db from "../db"

const loggedInUser = getUsername()

const username = Astro.url.pathname.split('/')[1]
console.log(username)
// Fetch the keys from the LevelDB


let crypto: CryptoKeys[] = [];

try {
  const userDoc = await db.get<UserDocument>(`/users/${username}`);
  crypto = userDoc.crypto || [];
  // do something with the crypto array
} catch (error) {
  if (error.status === 404) {
    // handle the case where the document does not exist
  } else {
    console.error(error);
    // handle other errors
  }
}

// Create a QR code image
const createQRCode = async (text: string) => {
  try {
    const qrCode = await QRCode.toDataURL(text);
    return qrCode;
  } catch (error) {
    console.error(error);
  }
};

// Fetch keys and generate QR codes
const keysWithQRCodes = await Promise.all(crypto.map(async (key: any) => {
  const qrCode = await createQRCode(key.key);
  return { ...key, qrCode };
}));

console.log(crypto)


---

<BaseTemplate>
    <div class="profile">
      <h1>{username}'s Profile</h1>
      { loggedInUser &&
        <form class="public-address-form" action="/crypto.json" method="POST">
          <input type="hidden" name="username" value={loggedInUser}>
          <label for="crypto-name">Crypto Name:</label>
          <input type="text" id="crypto-name" name="crypto-name" required>
          <label for="public-address">Public Crypto Address:</label>
          <input type="text" id="public-address" name="public-address" required>
          <button type="submit">Add</button>
        </form>
      }
    </div>
    <br/>
    <div class="cards-container">
        <ul role="list" class="link-card-grid">
          {keysWithQRCodes.map((crypto, index) => (
            <CryptoCard
              title={crypto.title}
              key={crypto.key}
              image={crypto.qrCode}
              id={index + 1}
            />
          ))}
        </ul>
    </div>
</BaseTemplate>


<style>
  .profile {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-top: 40px;
  }
</style>
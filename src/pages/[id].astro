---
import BaseTemplate from "../components/templates/BaseTemplate.astro";
import getUsername from "../composables/session";
import CryptoCard from "../components/atoms/CryptoCard.astro";
import QRCode from 'qrcode';
import db from "../db"

const username = getUsername()

if (username === null)
    return Astro.redirect('/')

// Fetch the keys from the LevelDB
const fetchKeys = async () => {
  try {
    const cryptoKeyData = await db.get(`/users/${username}/crypto`);
    return JSON.parse(cryptoKeyData);
  } catch (error) {
    console.error(error);
    return [];
  }
};

// Create a QR code image
const createQRCode = async (text) => {
  try {
    const qrCode = await QRCode.toDataURL(text);
    return qrCode;
  } catch (error) {
    console.error(error);
  }
};

// Fetch keys and generate QR codes
const keys = await fetchKeys();
const keysWithQRCodes = await Promise.all(keys.map(async key => {
  const qrCode = await createQRCode(key.key);
  return { ...key, qrCode };
}));

console.log(keys)


---

<BaseTemplate>
    <div class="profile">
      <h1>{username}'s Profile</h1>
      <form class="public-address-form" action="/crypto.json" method="POST">
        <input type="hidden" name="username" value={username}>
        <label for="crypto-name">Crypto Name:</label>
        <input type="text" id="crypto-name" name="crypto-name" required>
        <label for="public-address">Public Crypto Address:</label>
        <input type="text" id="public-address" name="public-address" required>
        <button type="submit">Add</button>
      </form>
    </div>
    <br/>
    <div class="cards-container">
        <ul role="list" class="link-card-grid">
          {keysWithQRCodes.map((crypto, index) => (
            <CryptoCard
              title={crypto.title}
              key={crypto.key}
              image={crypto.qrCode}
              id={index + 1}
            />
          ))}
        </ul>
    </div>
</BaseTemplate>


<style>
  .profile {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-top: 40px;
  }
</style>